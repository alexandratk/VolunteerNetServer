// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20240114170655_sdsd")]
    partial class sdsd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CurrentSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<string>("OwnerCardName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<decimal?>("RequiredSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationDocuments");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationPicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("ApplicationPictures");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationSkill", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("ApplicationSkills");
                });

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3fdfe37-911a-4a30-a4c5-204f65f723f2"),
                            Title = "health"
                        },
                        new
                        {
                            Id = new Guid("c73c6db1-6f13-4e08-a585-f5e1ed7717c6"),
                            Title = "education"
                        },
                        new
                        {
                            Id = new Guid("a6f6d3a4-852f-4d69-a08d-bfb510a09733"),
                            Title = "sports and physical culture"
                        },
                        new
                        {
                            Id = new Guid("a817961e-7aef-4ed5-a16a-2b4c5982abb0"),
                            Title = "culture and art"
                        },
                        new
                        {
                            Id = new Guid("62292242-1e0a-440e-8ac1-0d071cae9641"),
                            Title = "social programs"
                        },
                        new
                        {
                            Id = new Guid("e4ba4ee8-9afa-4362-adf8-8fe4a56a6a2b"),
                            Title = "ecology"
                        },
                        new
                        {
                            Id = new Guid("ac49835f-5709-47ac-b3da-7f686f246624"),
                            Title = "legal affairs"
                        },
                        new
                        {
                            Id = new Guid("b5f725a2-bbdc-4f32-9f70-7a480071a3fb"),
                            Title = "emergency response"
                        },
                        new
                        {
                            Id = new Guid("7d9dbb20-db83-4184-88d8-005595e63654"),
                            Title = "construction"
                        },
                        new
                        {
                            Id = new Guid("f3a42c61-b372-4432-a7d7-4754161b983c"),
                            Title = "transport"
                        },
                        new
                        {
                            Id = new Guid("dc1063b0-d68f-464d-9676-8422b66a6815"),
                            Title = "blood donation"
                        },
                        new
                        {
                            Id = new Guid("7359f760-56a0-4eb7-bdfb-d9fed91ad3ba"),
                            Title = "psychology"
                        },
                        new
                        {
                            Id = new Guid("a4282c15-206b-493c-88da-f315dc8fbec1"),
                            Title = "international projects"
                        },
                        new
                        {
                            Id = new Guid("50f64fcc-d3a6-4f7d-bd22-a542d49a4a70"),
                            Title = "animal welfare"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CategoryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c6848800-0e4f-4c3a-b43a-5276963da06f"),
                            CategoryId = new Guid("f3fdfe37-911a-4a30-a4c5-204f65f723f2"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "health care"
                        },
                        new
                        {
                            Id = new Guid("609160d4-b03a-4e66-9428-c2b5c089ef3e"),
                            CategoryId = new Guid("f3fdfe37-911a-4a30-a4c5-204f65f723f2"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "охорона здоров'я"
                        },
                        new
                        {
                            Id = new Guid("54110d26-f441-4f75-9c07-18ce1cdecce9"),
                            CategoryId = new Guid("f3fdfe37-911a-4a30-a4c5-204f65f723f2"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "opieka zdrowotna"
                        },
                        new
                        {
                            Id = new Guid("a4f07ab1-8393-49af-9676-98bef9cf9ab0"),
                            CategoryId = new Guid("c73c6db1-6f13-4e08-a585-f5e1ed7717c6"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "education"
                        },
                        new
                        {
                            Id = new Guid("d60d0ffe-f8bf-401c-a2c9-4ef8f3d12d2c"),
                            CategoryId = new Guid("c73c6db1-6f13-4e08-a585-f5e1ed7717c6"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "освіта"
                        },
                        new
                        {
                            Id = new Guid("f7a4d786-e7bf-460a-a797-41c93348fa3e"),
                            CategoryId = new Guid("c73c6db1-6f13-4e08-a585-f5e1ed7717c6"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "edukacja"
                        },
                        new
                        {
                            Id = new Guid("2e47b460-33ab-46eb-9c41-b086f5f20997"),
                            CategoryId = new Guid("a6f6d3a4-852f-4d69-a08d-bfb510a09733"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "sport and physical culture"
                        },
                        new
                        {
                            Id = new Guid("a9a45743-2988-49d0-ad87-20d1c9f0d9dc"),
                            CategoryId = new Guid("a6f6d3a4-852f-4d69-a08d-bfb510a09733"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "спорт та фізична культура"
                        },
                        new
                        {
                            Id = new Guid("7f66dbac-2d58-403c-b192-0206e75a565c"),
                            CategoryId = new Guid("a6f6d3a4-852f-4d69-a08d-bfb510a09733"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "sport i kultura fizyczna"
                        },
                        new
                        {
                            Id = new Guid("66a36aaf-4eec-4d83-82b5-7d07c45f302f"),
                            CategoryId = new Guid("a817961e-7aef-4ed5-a16a-2b4c5982abb0"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "culture and art"
                        },
                        new
                        {
                            Id = new Guid("25e142e9-078a-4a1d-a6a7-4f70ca8f8b80"),
                            CategoryId = new Guid("a817961e-7aef-4ed5-a16a-2b4c5982abb0"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "культура та мистецтво"
                        },
                        new
                        {
                            Id = new Guid("70699ea1-c500-4dec-8460-1feded0f0799"),
                            CategoryId = new Guid("a817961e-7aef-4ed5-a16a-2b4c5982abb0"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "kultura i sztuka"
                        },
                        new
                        {
                            Id = new Guid("0330e927-5e52-40d6-8afe-46fae0855522"),
                            CategoryId = new Guid("62292242-1e0a-440e-8ac1-0d071cae9641"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "social programs"
                        },
                        new
                        {
                            Id = new Guid("925fc998-6952-4829-ac6c-0e25292b6eb1"),
                            CategoryId = new Guid("62292242-1e0a-440e-8ac1-0d071cae9641"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "соціальні програми"
                        },
                        new
                        {
                            Id = new Guid("2b2032c4-a44a-47b6-9532-21ae7697f28b"),
                            CategoryId = new Guid("62292242-1e0a-440e-8ac1-0d071cae9641"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "programy społeczne"
                        },
                        new
                        {
                            Id = new Guid("04e0999e-1512-44f6-a6a3-1de738c29819"),
                            CategoryId = new Guid("e4ba4ee8-9afa-4362-adf8-8fe4a56a6a2b"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "ecology"
                        },
                        new
                        {
                            Id = new Guid("6d144346-0cb3-47c1-9462-3c1978797808"),
                            CategoryId = new Guid("e4ba4ee8-9afa-4362-adf8-8fe4a56a6a2b"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "екологія"
                        },
                        new
                        {
                            Id = new Guid("5a97535c-4bd1-4aaf-bea4-486b258526d4"),
                            CategoryId = new Guid("e4ba4ee8-9afa-4362-adf8-8fe4a56a6a2b"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "ekologia"
                        },
                        new
                        {
                            Id = new Guid("8c67770b-fd69-4621-8d95-a02a455d7f69"),
                            CategoryId = new Guid("ac49835f-5709-47ac-b3da-7f686f246624"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "legal affairs"
                        },
                        new
                        {
                            Id = new Guid("b0aee292-2425-4618-8da1-9c30924b12d3"),
                            CategoryId = new Guid("ac49835f-5709-47ac-b3da-7f686f246624"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "юридичні питання"
                        },
                        new
                        {
                            Id = new Guid("1ba5e949-43bd-4707-9d7d-14cad23b6591"),
                            CategoryId = new Guid("ac49835f-5709-47ac-b3da-7f686f246624"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "sprawy prawne"
                        },
                        new
                        {
                            Id = new Guid("6d3fc236-564e-4ffc-861f-b85fbc40a32e"),
                            CategoryId = new Guid("b5f725a2-bbdc-4f32-9f70-7a480071a3fb"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "emergency response"
                        },
                        new
                        {
                            Id = new Guid("ad282ef0-627b-43aa-8acb-33d1d44f2eb7"),
                            CategoryId = new Guid("b5f725a2-bbdc-4f32-9f70-7a480071a3fb"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "надзвичайні ситуації"
                        },
                        new
                        {
                            Id = new Guid("cd3c4dcf-7da1-452f-af1d-8c65741018e5"),
                            CategoryId = new Guid("b5f725a2-bbdc-4f32-9f70-7a480071a3fb"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "reagowanie kryzysowe"
                        },
                        new
                        {
                            Id = new Guid("bce161b0-d915-45af-a97b-4c94e33b0d91"),
                            CategoryId = new Guid("7d9dbb20-db83-4184-88d8-005595e63654"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "construction"
                        },
                        new
                        {
                            Id = new Guid("006dd592-18f9-480f-bfd2-b9c5b454f154"),
                            CategoryId = new Guid("7d9dbb20-db83-4184-88d8-005595e63654"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "будівництво"
                        },
                        new
                        {
                            Id = new Guid("416c2205-6f6a-44fa-a7e8-0984980d467b"),
                            CategoryId = new Guid("7d9dbb20-db83-4184-88d8-005595e63654"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "konstrukcja"
                        },
                        new
                        {
                            Id = new Guid("2143d13e-5559-45d1-a077-3b3891d9106f"),
                            CategoryId = new Guid("f3a42c61-b372-4432-a7d7-4754161b983c"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "transport"
                        },
                        new
                        {
                            Id = new Guid("6ab08fb3-1c0d-43e2-9c74-49b9c2fa5790"),
                            CategoryId = new Guid("f3a42c61-b372-4432-a7d7-4754161b983c"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "транспорт"
                        },
                        new
                        {
                            Id = new Guid("ef2031f4-a934-4c59-bebf-0e3f6856474b"),
                            CategoryId = new Guid("f3a42c61-b372-4432-a7d7-4754161b983c"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "transport"
                        },
                        new
                        {
                            Id = new Guid("f85c925f-6ad6-489f-b416-3cc285c7ea9c"),
                            CategoryId = new Guid("dc1063b0-d68f-464d-9676-8422b66a6815"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "blood donation"
                        },
                        new
                        {
                            Id = new Guid("354f1c7f-c51d-4c85-a477-f1fb263799aa"),
                            CategoryId = new Guid("dc1063b0-d68f-464d-9676-8422b66a6815"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "донорство крові"
                        },
                        new
                        {
                            Id = new Guid("fc8b433b-490f-4a07-98d9-3300da227b70"),
                            CategoryId = new Guid("dc1063b0-d68f-464d-9676-8422b66a6815"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "krwiodawstwo"
                        },
                        new
                        {
                            Id = new Guid("6f303877-15b4-4153-86d3-d3cd39ab482a"),
                            CategoryId = new Guid("7359f760-56a0-4eb7-bdfb-d9fed91ad3ba"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "psychology"
                        },
                        new
                        {
                            Id = new Guid("5ff05ea8-a0d0-42aa-8829-b31d411dbc38"),
                            CategoryId = new Guid("7359f760-56a0-4eb7-bdfb-d9fed91ad3ba"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "психологія"
                        },
                        new
                        {
                            Id = new Guid("02b77ca1-fb14-411a-902d-33c189d5a22f"),
                            CategoryId = new Guid("7359f760-56a0-4eb7-bdfb-d9fed91ad3ba"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "psychologia"
                        },
                        new
                        {
                            Id = new Guid("0eccf294-0f63-462b-8a3d-2b8b8101e7ab"),
                            CategoryId = new Guid("a4282c15-206b-493c-88da-f315dc8fbec1"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "international projects"
                        },
                        new
                        {
                            Id = new Guid("dd9628be-b7df-4e13-b629-9326c0131166"),
                            CategoryId = new Guid("a4282c15-206b-493c-88da-f315dc8fbec1"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "міжнародні проекти"
                        },
                        new
                        {
                            Id = new Guid("c73e6f09-3556-4214-82ba-640c738f277d"),
                            CategoryId = new Guid("a4282c15-206b-493c-88da-f315dc8fbec1"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "projekty międzynarodowe"
                        },
                        new
                        {
                            Id = new Guid("43f08223-538a-4a1b-9004-410a7fe31a12"),
                            CategoryId = new Guid("50f64fcc-d3a6-4f7d-bd22-a542d49a4a70"),
                            DescriptionCategory = " ",
                            Language = "en",
                            Name = "animal welfare"
                        },
                        new
                        {
                            Id = new Guid("35b76eb6-8a9b-4aa9-8e7f-6fe0d0044239"),
                            CategoryId = new Guid("50f64fcc-d3a6-4f7d-bd22-a542d49a4a70"),
                            DescriptionCategory = " ",
                            Language = "uk",
                            Name = "захист тварин"
                        },
                        new
                        {
                            Id = new Guid("4b44899c-19cd-4536-8126-f6731bccc080"),
                            CategoryId = new Guid("50f64fcc-d3a6-4f7d-bd22-a542d49a4a70"),
                            DescriptionCategory = " ",
                            Language = "pl",
                            Name = "dobrostan zwierząt"
                        });
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("268d4e59-d3a4-4853-b7fc-2d8310be527d"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("c68ecc10-5b46-4dbb-a145-f6a1979814d6"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("14a4b1b8-c984-47ab-94c9-17808e3fabf2"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("ef17da4e-7fa1-4a72-83dc-831299cc0814"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("18052a73-6541-45f5-9ef3-9aa6fa339fed"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("7bdeb37a-da90-4d98-8db3-7ddc97d9285b"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("ff3dadb3-13a6-42d6-8c14-c1a623cf494a"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("6b561faa-a897-42b0-8463-5bff7b8719c8"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("d020a6b5-8dce-4b0f-8c80-90258c36094c"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("40475368-0054-4e52-9936-1d94a63a25f1"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("2ee3df44-3567-474d-b849-0fba76f8418a"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("2e7eb396-cc32-4301-ae28-028248006b3c"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("0206dc31-0e62-4561-9c89-09366f4e0d5b"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("a032c6b8-aadc-4dbc-9b03-17762b8b439b"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("37587541-33d8-49ce-a28b-8a05ed1e3376"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("cc5df106-1d0d-42f4-9ba7-fc6bf86e4878"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("ac8af96a-0717-4981-a245-95d185d2595a"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("f465fc33-3ae2-4a28-b5e3-3432cd80d0c7"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("05e94990-9953-4d4f-92c2-d2300bd5d50c"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("708cc164-7d67-41cc-8336-b13f9566ea08"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("e2c362d6-2f21-47c3-8b5b-998173485997"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("02c91a18-6390-431e-b599-5547396b8d5c"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("d0698137-20dd-4f6b-b6b6-64ffa873e225"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("e26bccb3-191e-4890-b38e-89e78e0b65a1"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "lub"
                        },
                        new
                        {
                            Id = new Guid("21564f33-365a-4686-9f3f-d9eb905f25a7"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "bydcz"
                        },
                        new
                        {
                            Id = new Guid("ac081e62-6f30-415b-8deb-ef5435b294d3"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "tor"
                        },
                        new
                        {
                            Id = new Guid("b7c50d74-2f71-4fa9-8582-3726f2c2b36c"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "gor"
                        },
                        new
                        {
                            Id = new Guid("de540bb4-c12b-442c-aa0d-fadd95e860c1"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "zie"
                        },
                        new
                        {
                            Id = new Guid("07f7d41f-77a3-4c67-b5cc-8abe61c1f945"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "lod"
                        },
                        new
                        {
                            Id = new Guid("43890a7b-e4b7-4991-b7ac-060fd72bdd5f"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "kra"
                        },
                        new
                        {
                            Id = new Guid("46a36a46-0e38-4a50-a164-c709fbadb847"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "wro"
                        },
                        new
                        {
                            Id = new Guid("677c28bb-1bec-4b87-8bf7-c4169918dc3d"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "opo"
                        },
                        new
                        {
                            Id = new Guid("3cccdba9-2b88-4d0d-9dc8-709f3083c42c"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "rze"
                        },
                        new
                        {
                            Id = new Guid("5c41b968-898e-4b7d-a887-e1e91b4e9177"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "biaok"
                        },
                        new
                        {
                            Id = new Guid("2ece286f-cf28-4328-864f-e2bae4bf77a5"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "gda"
                        },
                        new
                        {
                            Id = new Guid("946f69c6-843f-4726-b51b-210caabe557b"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "kat"
                        },
                        new
                        {
                            Id = new Guid("bf6d9eaa-7685-4bbf-aa72-fa175c171c83"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "kie"
                        },
                        new
                        {
                            Id = new Guid("6c7b9fbb-c612-4324-a6c5-121c21eef8ff"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "ols"
                        },
                        new
                        {
                            Id = new Guid("45ee93cc-f540-48d9-95d0-2eb35e15b752"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "poz"
                        },
                        new
                        {
                            Id = new Guid("6c22e0a0-8464-465f-be65-7d8f16b3e2d5"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "szc"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23453aae-d666-4489-b58b-e5cd25028bd6"),
                            CityId = new Guid("268d4e59-d3a4-4853-b7fc-2d8310be527d"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("403213b4-9bb7-4a68-ae2c-326b97477504"),
                            CityId = new Guid("c68ecc10-5b46-4dbb-a145-f6a1979814d6"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("ab0edbd2-e91e-45b9-a261-f5511de62ce6"),
                            CityId = new Guid("14a4b1b8-c984-47ab-94c9-17808e3fabf2"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("7d8fb256-fa90-4c15-a06c-96dffdac472f"),
                            CityId = new Guid("ef17da4e-7fa1-4a72-83dc-831299cc0814"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("e3141b84-ac2e-46f6-8bf3-d33c7f626b2c"),
                            CityId = new Guid("18052a73-6541-45f5-9ef3-9aa6fa339fed"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("dfbe1556-dfac-4840-9f76-c590278f4d33"),
                            CityId = new Guid("7bdeb37a-da90-4d98-8db3-7ddc97d9285b"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("eed55324-2c87-4076-a372-876e8b24c822"),
                            CityId = new Guid("ff3dadb3-13a6-42d6-8c14-c1a623cf494a"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("f07bbe67-1b68-4c05-9ea2-b50926a0a88b"),
                            CityId = new Guid("6b561faa-a897-42b0-8463-5bff7b8719c8"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("8f640b3a-8c9f-43ed-9820-9c75dc80ebc3"),
                            CityId = new Guid("d020a6b5-8dce-4b0f-8c80-90258c36094c"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("5cebe952-2d86-467f-b7d5-70ff51c9407f"),
                            CityId = new Guid("40475368-0054-4e52-9936-1d94a63a25f1"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("b7aaeb2c-5595-455e-80fc-3f326df03b8f"),
                            CityId = new Guid("2ee3df44-3567-474d-b849-0fba76f8418a"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("64804ea8-4641-49fa-ae68-c2a4cc6c6004"),
                            CityId = new Guid("2e7eb396-cc32-4301-ae28-028248006b3c"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("24209d83-545b-4512-b05a-6884a1a9898b"),
                            CityId = new Guid("0206dc31-0e62-4561-9c89-09366f4e0d5b"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("f8c850a1-a0ed-4b9c-8be7-f34cab3e9c62"),
                            CityId = new Guid("a032c6b8-aadc-4dbc-9b03-17762b8b439b"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("dbaab491-d590-4cd3-8f5e-c03c0324e023"),
                            CityId = new Guid("37587541-33d8-49ce-a28b-8a05ed1e3376"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("24dfd7a3-437b-457e-89ae-daa3c678a124"),
                            CityId = new Guid("cc5df106-1d0d-42f4-9ba7-fc6bf86e4878"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("7067d7ef-11a3-4fe4-a847-2f5df19cd867"),
                            CityId = new Guid("ac8af96a-0717-4981-a245-95d185d2595a"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("a556eba3-9025-4829-8877-1fe30d5e0b09"),
                            CityId = new Guid("f465fc33-3ae2-4a28-b5e3-3432cd80d0c7"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("80f6079b-14fe-46e5-b06b-2599a659c94d"),
                            CityId = new Guid("05e94990-9953-4d4f-92c2-d2300bd5d50c"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("467d4895-f029-4aae-95d0-5e5fe65c459c"),
                            CityId = new Guid("708cc164-7d67-41cc-8336-b13f9566ea08"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("6ec71b2c-38f5-4082-a406-3f907a07802b"),
                            CityId = new Guid("e2c362d6-2f21-47c3-8b5b-998173485997"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("61a244f5-a23e-4676-92e6-5480841e8cd6"),
                            CityId = new Guid("02c91a18-6390-431e-b599-5547396b8d5c"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("a61d74bf-157e-4965-98ca-8531645d1781"),
                            CityId = new Guid("268d4e59-d3a4-4853-b7fc-2d8310be527d"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("ffc9f33b-7432-4710-97c4-3bd99f741e53"),
                            CityId = new Guid("c68ecc10-5b46-4dbb-a145-f6a1979814d6"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("038d9367-ee98-4930-897c-2526eeaab58a"),
                            CityId = new Guid("14a4b1b8-c984-47ab-94c9-17808e3fabf2"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("ae0df3a7-dd83-4feb-8665-1ac14f9ea8b8"),
                            CityId = new Guid("ef17da4e-7fa1-4a72-83dc-831299cc0814"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("09a3e67f-f405-4c34-993e-ebfdc636d41b"),
                            CityId = new Guid("18052a73-6541-45f5-9ef3-9aa6fa339fed"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("b1a0e988-fa95-45a3-9e99-7522c2641caf"),
                            CityId = new Guid("7bdeb37a-da90-4d98-8db3-7ddc97d9285b"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("f0069b65-fadc-4d28-80b1-f61733d3b49c"),
                            CityId = new Guid("ff3dadb3-13a6-42d6-8c14-c1a623cf494a"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("d10fbd7d-69e3-4181-8085-da815163a56b"),
                            CityId = new Guid("6b561faa-a897-42b0-8463-5bff7b8719c8"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("d931aec4-3505-4c72-8a9b-30792229ac99"),
                            CityId = new Guid("d020a6b5-8dce-4b0f-8c80-90258c36094c"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("5d613487-b228-4bb2-8ef4-861df24ef335"),
                            CityId = new Guid("40475368-0054-4e52-9936-1d94a63a25f1"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("502a42f7-27e1-406c-b6c5-872a240eab7a"),
                            CityId = new Guid("2ee3df44-3567-474d-b849-0fba76f8418a"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("3754f17d-b05f-43d3-a0a8-cc7603138479"),
                            CityId = new Guid("2e7eb396-cc32-4301-ae28-028248006b3c"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("105a20d7-909f-47b2-b73c-1137059af575"),
                            CityId = new Guid("0206dc31-0e62-4561-9c89-09366f4e0d5b"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("1ef72bc0-9898-4480-942f-42c754b0ec4a"),
                            CityId = new Guid("a032c6b8-aadc-4dbc-9b03-17762b8b439b"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("1ea39cd3-ea04-4366-b302-5b02b3d6bf6f"),
                            CityId = new Guid("37587541-33d8-49ce-a28b-8a05ed1e3376"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("6cfe8b24-2d91-4c13-8aad-341643de3bd0"),
                            CityId = new Guid("cc5df106-1d0d-42f4-9ba7-fc6bf86e4878"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("28c8d605-f2a7-41fd-b05b-ca792fc4c165"),
                            CityId = new Guid("ac8af96a-0717-4981-a245-95d185d2595a"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("a95a15e4-bc8e-4b00-b983-a7752ffbcbd1"),
                            CityId = new Guid("f465fc33-3ae2-4a28-b5e3-3432cd80d0c7"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("cd981182-a90e-4ee6-af98-0f6546f09d6b"),
                            CityId = new Guid("05e94990-9953-4d4f-92c2-d2300bd5d50c"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("0a8aa76c-aa69-4d2e-b7e1-95bc9997fc66"),
                            CityId = new Guid("708cc164-7d67-41cc-8336-b13f9566ea08"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("2e27f57a-0d2a-4b65-8715-92a12492cfe7"),
                            CityId = new Guid("e2c362d6-2f21-47c3-8b5b-998173485997"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("f02b3ea0-9311-4c53-b564-431aced2b141"),
                            CityId = new Guid("02c91a18-6390-431e-b599-5547396b8d5c"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("aea21d9a-bbd6-4454-80fa-236d6bdf6478"),
                            CityId = new Guid("268d4e59-d3a4-4853-b7fc-2d8310be527d"),
                            Language = "pl",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("a8905cb0-f0fe-4f88-8d30-cb57ff9e7a8d"),
                            CityId = new Guid("c68ecc10-5b46-4dbb-a145-f6a1979814d6"),
                            Language = "pl",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("6a14e79e-2884-4bb2-a672-c7c881a5f67d"),
                            CityId = new Guid("14a4b1b8-c984-47ab-94c9-17808e3fabf2"),
                            Language = "pl",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("adb406f7-9815-46d5-ac36-0586c0b6dbb7"),
                            CityId = new Guid("ef17da4e-7fa1-4a72-83dc-831299cc0814"),
                            Language = "pl",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("9cb49587-330c-49b0-8131-adb0a971b32b"),
                            CityId = new Guid("18052a73-6541-45f5-9ef3-9aa6fa339fed"),
                            Language = "pl",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("7614c389-7872-4d1f-a05e-3bb358494284"),
                            CityId = new Guid("7bdeb37a-da90-4d98-8db3-7ddc97d9285b"),
                            Language = "pl",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("8314ab03-3dfd-48be-be65-2319cc3e8fd6"),
                            CityId = new Guid("ff3dadb3-13a6-42d6-8c14-c1a623cf494a"),
                            Language = "pl",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("859ffac2-713b-4720-a412-3c84bbb3688e"),
                            CityId = new Guid("6b561faa-a897-42b0-8463-5bff7b8719c8"),
                            Language = "pl",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("bb3a51df-3c10-42ce-acc9-79246ed58195"),
                            CityId = new Guid("d020a6b5-8dce-4b0f-8c80-90258c36094c"),
                            Language = "pl",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("31942ed1-7c39-43e2-9402-75ea85ede5bb"),
                            CityId = new Guid("40475368-0054-4e52-9936-1d94a63a25f1"),
                            Language = "pl",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("bfb5f4fa-b4fd-4338-b95a-e88b741b5825"),
                            CityId = new Guid("2ee3df44-3567-474d-b849-0fba76f8418a"),
                            Language = "pl",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("a27d6fd4-f777-405a-9749-86d2fc09ace8"),
                            CityId = new Guid("2e7eb396-cc32-4301-ae28-028248006b3c"),
                            Language = "pl",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("3f79d513-592f-4c53-86b4-a16df22d8240"),
                            CityId = new Guid("0206dc31-0e62-4561-9c89-09366f4e0d5b"),
                            Language = "pl",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("e82d8a17-72e7-48ff-9706-105c54dd669c"),
                            CityId = new Guid("a032c6b8-aadc-4dbc-9b03-17762b8b439b"),
                            Language = "pl",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("97aa64e2-44f3-4a6c-a7ee-de7e2d72dc01"),
                            CityId = new Guid("37587541-33d8-49ce-a28b-8a05ed1e3376"),
                            Language = "pl",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("92da17ab-6f30-4df9-9115-42a7e6ef9a13"),
                            CityId = new Guid("cc5df106-1d0d-42f4-9ba7-fc6bf86e4878"),
                            Language = "pl",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("838fab05-14dc-4367-84c2-791e77c28739"),
                            CityId = new Guid("ac8af96a-0717-4981-a245-95d185d2595a"),
                            Language = "pl",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("8c504d06-4483-42e8-b019-45d09ed02b5c"),
                            CityId = new Guid("f465fc33-3ae2-4a28-b5e3-3432cd80d0c7"),
                            Language = "pl",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("d08a2c50-e81a-43aa-a1fe-fe8dc6a52482"),
                            CityId = new Guid("05e94990-9953-4d4f-92c2-d2300bd5d50c"),
                            Language = "pl",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("f57c8b01-d76f-4bda-a209-ae7394144e82"),
                            CityId = new Guid("708cc164-7d67-41cc-8336-b13f9566ea08"),
                            Language = "pl",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("ee856946-1733-418f-9cc1-951a4ae1090a"),
                            CityId = new Guid("e2c362d6-2f21-47c3-8b5b-998173485997"),
                            Language = "pl",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("abd220bf-b792-451e-acbf-50be8aa6befd"),
                            CityId = new Guid("02c91a18-6390-431e-b599-5547396b8d5c"),
                            Language = "pl",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("fa6a91b4-229c-4747-be20-87cc41ead42b"),
                            CityId = new Guid("d0698137-20dd-4f6b-b6b6-64ffa873e225"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("0fdd60aa-d0d2-4ba0-8257-8fbd5915f002"),
                            CityId = new Guid("e26bccb3-191e-4890-b38e-89e78e0b65a1"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("7b206f07-6dce-4f44-9c35-0154ab78d726"),
                            CityId = new Guid("21564f33-365a-4686-9f3f-d9eb905f25a7"),
                            Language = "uk",
                            Name = "Бидгощ"
                        },
                        new
                        {
                            Id = new Guid("69a1ac94-7242-4e93-b363-a4af07d0117d"),
                            CityId = new Guid("ac081e62-6f30-415b-8deb-ef5435b294d3"),
                            Language = "uk",
                            Name = "Торунь"
                        },
                        new
                        {
                            Id = new Guid("cb0eac58-c113-47ce-8c11-b5f03ae4657b"),
                            CityId = new Guid("b7c50d74-2f71-4fa9-8582-3726f2c2b36c"),
                            Language = "uk",
                            Name = "Гожув-Великопольський"
                        },
                        new
                        {
                            Id = new Guid("e5294b08-92fc-4f41-975d-4391e1b85bc4"),
                            CityId = new Guid("de540bb4-c12b-442c-aa0d-fadd95e860c1"),
                            Language = "uk",
                            Name = "Зелена Гура"
                        },
                        new
                        {
                            Id = new Guid("afa9d6be-264d-4210-9f78-4533a1ae8c90"),
                            CityId = new Guid("07f7d41f-77a3-4c67-b5cc-8abe61c1f945"),
                            Language = "uk",
                            Name = "Лодзь"
                        },
                        new
                        {
                            Id = new Guid("87fb639e-d906-4400-8985-10e303f08ff7"),
                            CityId = new Guid("43890a7b-e4b7-4991-b7ac-060fd72bdd5f"),
                            Language = "uk",
                            Name = "Краків"
                        },
                        new
                        {
                            Id = new Guid("c9f59243-438f-451a-8c7f-d993f56c811b"),
                            CityId = new Guid("46a36a46-0e38-4a50-a164-c709fbadb847"),
                            Language = "uk",
                            Name = "Вроцлав"
                        },
                        new
                        {
                            Id = new Guid("0a473981-81c9-4b84-ae78-6438b2b7a572"),
                            CityId = new Guid("677c28bb-1bec-4b87-8bf7-c4169918dc3d"),
                            Language = "uk",
                            Name = "Ополе"
                        },
                        new
                        {
                            Id = new Guid("307f2490-abac-4b82-a6ee-8b0e3439ad79"),
                            CityId = new Guid("3cccdba9-2b88-4d0d-9dc8-709f3083c42c"),
                            Language = "uk",
                            Name = "Ряшів"
                        },
                        new
                        {
                            Id = new Guid("bf34a249-1e1f-4965-a88f-94556922aa0b"),
                            CityId = new Guid("5c41b968-898e-4b7d-a887-e1e91b4e9177"),
                            Language = "uk",
                            Name = "Білосток"
                        },
                        new
                        {
                            Id = new Guid("00d92f2a-d1cd-4e1e-b65c-4d434c559ad5"),
                            CityId = new Guid("2ece286f-cf28-4328-864f-e2bae4bf77a5"),
                            Language = "uk",
                            Name = "Гданськ"
                        },
                        new
                        {
                            Id = new Guid("1c4fdbad-9b2c-4310-99f7-4af5266f44c8"),
                            CityId = new Guid("946f69c6-843f-4726-b51b-210caabe557b"),
                            Language = "uk",
                            Name = "Катовиці"
                        },
                        new
                        {
                            Id = new Guid("bd98203b-f83a-4007-80ea-7f7428ac57b4"),
                            CityId = new Guid("bf6d9eaa-7685-4bbf-aa72-fa175c171c83"),
                            Language = "uk",
                            Name = "Кельці"
                        },
                        new
                        {
                            Id = new Guid("35e2f122-3aa8-4172-b31a-ee7dd6c3b95b"),
                            CityId = new Guid("6c7b9fbb-c612-4324-a6c5-121c21eef8ff"),
                            Language = "uk",
                            Name = "Ольштин"
                        },
                        new
                        {
                            Id = new Guid("9bc66657-3e0e-4ac6-b1fd-7003b27f26e4"),
                            CityId = new Guid("45ee93cc-f540-48d9-95d0-2eb35e15b752"),
                            Language = "uk",
                            Name = "Познань"
                        },
                        new
                        {
                            Id = new Guid("a4ebdde6-c1e1-45f7-8783-97fa4d499aba"),
                            CityId = new Guid("6c22e0a0-8464-465f-be65-7d8f16b3e2d5"),
                            Language = "uk",
                            Name = "Щецин"
                        },
                        new
                        {
                            Id = new Guid("6c48238c-da3e-48dd-9274-77e2b5898b75"),
                            CityId = new Guid("d0698137-20dd-4f6b-b6b6-64ffa873e225"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("d12b88ff-3292-4981-87ec-4f97913c7694"),
                            CityId = new Guid("e26bccb3-191e-4890-b38e-89e78e0b65a1"),
                            Language = "en",
                            Name = "Lublin"
                        },
                        new
                        {
                            Id = new Guid("d2492dad-0402-443a-8e90-997040eabf06"),
                            CityId = new Guid("21564f33-365a-4686-9f3f-d9eb905f25a7"),
                            Language = "en",
                            Name = "Bydgoszcz"
                        },
                        new
                        {
                            Id = new Guid("5dc8af2a-da19-465e-b2fd-2f309829296a"),
                            CityId = new Guid("ac081e62-6f30-415b-8deb-ef5435b294d3"),
                            Language = "en",
                            Name = "Torun"
                        },
                        new
                        {
                            Id = new Guid("44745c98-233c-46b7-9513-fc87f63feea0"),
                            CityId = new Guid("b7c50d74-2f71-4fa9-8582-3726f2c2b36c"),
                            Language = "en",
                            Name = "Gorzow Wielkopolski"
                        },
                        new
                        {
                            Id = new Guid("ab954a14-72fc-476d-bec0-4479db58a787"),
                            CityId = new Guid("de540bb4-c12b-442c-aa0d-fadd95e860c1"),
                            Language = "en",
                            Name = "Zielona Gora"
                        },
                        new
                        {
                            Id = new Guid("1762f573-9fd3-4636-bc49-3d3163a841c9"),
                            CityId = new Guid("07f7d41f-77a3-4c67-b5cc-8abe61c1f945"),
                            Language = "en",
                            Name = "Lodz"
                        },
                        new
                        {
                            Id = new Guid("18e4fa5d-af00-4ff1-948b-9485b57fdbf2"),
                            CityId = new Guid("43890a7b-e4b7-4991-b7ac-060fd72bdd5f"),
                            Language = "en",
                            Name = "Krakow"
                        },
                        new
                        {
                            Id = new Guid("e84988e1-f431-445e-8323-373d14c2628f"),
                            CityId = new Guid("46a36a46-0e38-4a50-a164-c709fbadb847"),
                            Language = "en",
                            Name = "Wroclaw"
                        },
                        new
                        {
                            Id = new Guid("a7ada713-5e5d-4702-a228-b041683bcc0f"),
                            CityId = new Guid("677c28bb-1bec-4b87-8bf7-c4169918dc3d"),
                            Language = "en",
                            Name = "Opole"
                        },
                        new
                        {
                            Id = new Guid("723df81e-db37-4174-8dcf-c3276ea8802d"),
                            CityId = new Guid("3cccdba9-2b88-4d0d-9dc8-709f3083c42c"),
                            Language = "en",
                            Name = "Rzeszow"
                        },
                        new
                        {
                            Id = new Guid("2376e3af-caef-4e71-ab9b-2dfd81ca294c"),
                            CityId = new Guid("5c41b968-898e-4b7d-a887-e1e91b4e9177"),
                            Language = "en",
                            Name = "Bialystok"
                        },
                        new
                        {
                            Id = new Guid("b61fbaf6-42d7-4aa7-b3d3-81118a8a137b"),
                            CityId = new Guid("2ece286f-cf28-4328-864f-e2bae4bf77a5"),
                            Language = "en",
                            Name = "Gdansk"
                        },
                        new
                        {
                            Id = new Guid("8278d747-814b-4409-ae81-317ded394b6e"),
                            CityId = new Guid("946f69c6-843f-4726-b51b-210caabe557b"),
                            Language = "en",
                            Name = "Katowice"
                        },
                        new
                        {
                            Id = new Guid("77217de9-d5ca-435e-a8a2-f822a66478f0"),
                            CityId = new Guid("bf6d9eaa-7685-4bbf-aa72-fa175c171c83"),
                            Language = "en",
                            Name = "Kielce"
                        },
                        new
                        {
                            Id = new Guid("1c03e8e4-d3a9-473a-9682-340ea29c0ed8"),
                            CityId = new Guid("6c7b9fbb-c612-4324-a6c5-121c21eef8ff"),
                            Language = "en",
                            Name = "Olsztyn"
                        },
                        new
                        {
                            Id = new Guid("6aa5cbc4-b329-4b1b-814b-89258821bcd2"),
                            CityId = new Guid("45ee93cc-f540-48d9-95d0-2eb35e15b752"),
                            Language = "en",
                            Name = "Poznan"
                        },
                        new
                        {
                            Id = new Guid("f54bcdc7-5302-4f57-952f-3d6f62cc901f"),
                            CityId = new Guid("6c22e0a0-8464-465f-be65-7d8f16b3e2d5"),
                            Language = "en",
                            Name = "Szczecin"
                        },
                        new
                        {
                            Id = new Guid("8d5dbca0-9b3a-4734-8cfc-0a4c1dec9404"),
                            CityId = new Guid("d0698137-20dd-4f6b-b6b6-64ffa873e225"),
                            Language = "pl",
                            Name = "Warszawa"
                        },
                        new
                        {
                            Id = new Guid("48f0ae9a-5454-4409-9de4-9dd1cfa77893"),
                            CityId = new Guid("e26bccb3-191e-4890-b38e-89e78e0b65a1"),
                            Language = "pl",
                            Name = "Lublin"
                        },
                        new
                        {
                            Id = new Guid("08f035af-d813-4b61-88e4-cfd908a29df6"),
                            CityId = new Guid("21564f33-365a-4686-9f3f-d9eb905f25a7"),
                            Language = "pl",
                            Name = "Bydgoszcz"
                        },
                        new
                        {
                            Id = new Guid("9db23abb-3c61-4a41-a1ad-741d78103dda"),
                            CityId = new Guid("ac081e62-6f30-415b-8deb-ef5435b294d3"),
                            Language = "pl",
                            Name = "Toruń"
                        },
                        new
                        {
                            Id = new Guid("e95a598e-8d0d-4db4-a9d8-64754ae1d5ae"),
                            CityId = new Guid("b7c50d74-2f71-4fa9-8582-3726f2c2b36c"),
                            Language = "pl",
                            Name = "Gorzów Wielkopolski"
                        },
                        new
                        {
                            Id = new Guid("de6f7a79-3a07-4256-a8d8-793c03186339"),
                            CityId = new Guid("de540bb4-c12b-442c-aa0d-fadd95e860c1"),
                            Language = "pl",
                            Name = "Zielona Góra"
                        },
                        new
                        {
                            Id = new Guid("1ed601cb-58e3-4c31-8610-8b3269a1bdcb"),
                            CityId = new Guid("07f7d41f-77a3-4c67-b5cc-8abe61c1f945"),
                            Language = "pl",
                            Name = "Łódź"
                        },
                        new
                        {
                            Id = new Guid("512d3366-6cf7-437e-8bfd-3defa6a82806"),
                            CityId = new Guid("43890a7b-e4b7-4991-b7ac-060fd72bdd5f"),
                            Language = "pl",
                            Name = "Kraków"
                        },
                        new
                        {
                            Id = new Guid("66c4bb6a-cc9c-4aa4-b698-ca34a23c2014"),
                            CityId = new Guid("46a36a46-0e38-4a50-a164-c709fbadb847"),
                            Language = "pl",
                            Name = "Wrocław"
                        },
                        new
                        {
                            Id = new Guid("e4723fca-991e-44aa-84ed-b90f4a6dcb53"),
                            CityId = new Guid("677c28bb-1bec-4b87-8bf7-c4169918dc3d"),
                            Language = "pl",
                            Name = "Opole"
                        },
                        new
                        {
                            Id = new Guid("314e5a0e-57ba-4846-b08a-89d0d5c1ed30"),
                            CityId = new Guid("3cccdba9-2b88-4d0d-9dc8-709f3083c42c"),
                            Language = "pl",
                            Name = "Rzeszów"
                        },
                        new
                        {
                            Id = new Guid("a971505e-f13f-46f7-8863-227d970e07ea"),
                            CityId = new Guid("5c41b968-898e-4b7d-a887-e1e91b4e9177"),
                            Language = "pl",
                            Name = "Białystok"
                        },
                        new
                        {
                            Id = new Guid("79f5fb11-9eba-4f39-8d67-689ac24963bb"),
                            CityId = new Guid("2ece286f-cf28-4328-864f-e2bae4bf77a5"),
                            Language = "pl",
                            Name = "Gdańsk"
                        },
                        new
                        {
                            Id = new Guid("3ea6ce58-bf73-4753-93b4-18e88cc5a28e"),
                            CityId = new Guid("946f69c6-843f-4726-b51b-210caabe557b"),
                            Language = "pl",
                            Name = "Katowice"
                        },
                        new
                        {
                            Id = new Guid("2d98f09c-a70a-48c0-8305-e5dfbd3fe295"),
                            CityId = new Guid("bf6d9eaa-7685-4bbf-aa72-fa175c171c83"),
                            Language = "pl",
                            Name = "Kielce"
                        },
                        new
                        {
                            Id = new Guid("dcb530d9-63fb-4bee-b584-820df5d3120e"),
                            CityId = new Guid("6c7b9fbb-c612-4324-a6c5-121c21eef8ff"),
                            Language = "pl",
                            Name = "Olsztyn"
                        },
                        new
                        {
                            Id = new Guid("6947c6f7-716f-450b-9115-61eed9434bf1"),
                            CityId = new Guid("45ee93cc-f540-48d9-95d0-2eb35e15b752"),
                            Language = "pl",
                            Name = "Poznań"
                        },
                        new
                        {
                            Id = new Guid("3d647ba2-e4da-44ca-a034-8b700477eff4"),
                            CityId = new Guid("6c22e0a0-8464-465f-be65-7d8f16b3e2d5"),
                            Language = "pl",
                            Name = "Szczecin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("12d7b17c-f738-4785-b6d7-98ea5215dab5"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("0d233fb5-dde9-4ef7-8a77-c0dd7b44ee98"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("81ee99a4-43e4-4d07-853a-3bc9788e009f"),
                            CountryId = new Guid("b05e082d-2e36-4a94-8dfd-73ef5b455e21"),
                            Language = "pl",
                            Name = "Ukraina"
                        },
                        new
                        {
                            Id = new Guid("f0205126-cbaf-4dc8-89ac-93981c90d6aa"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("a96f376b-d2aa-48c9-aac1-c67f1ba1bf36"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            Language = "uk",
                            Name = "Польща"
                        },
                        new
                        {
                            Id = new Guid("f1f20e64-5d0a-4475-956d-e9b39cfc052a"),
                            CountryId = new Guid("9b86c8ea-8ecc-48bd-9120-44c0eeca2683"),
                            Language = "pl",
                            Name = "Polska"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Donate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTimeCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCardBank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SenderCardCountry")
                        .HasColumnType("int");

                    b.Property<string>("SenderCardMask2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCardType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SenderCommission")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Donates");
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VolunteerApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerUserId", "VolunteerApplicationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DAL.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplictionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserRecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserSenderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplictionId");

                    b.HasIndex("UserRecipientId");

                    b.HasIndex("UserSenderId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0bc6d05-27c0-4e7d-afb3-d8c2182601e2"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("60699999-0c05-436d-a5ad-bd420345c9a1"),
                            Title = "cooking"
                        },
                        new
                        {
                            Id = new Guid("57653ca6-d7ec-40c0-b2da-42b2b9c1bc0b"),
                            Title = "building"
                        },
                        new
                        {
                            Id = new Guid("d03a13ef-a7ca-4b8b-a5ba-88e46db20ba9"),
                            Title = "psychology"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81d573e0-7f8e-4630-9082-74ff6fbcdf24"),
                            Language = "en",
                            Name = "medicine",
                            SkillId = new Guid("f0bc6d05-27c0-4e7d-afb3-d8c2182601e2")
                        },
                        new
                        {
                            Id = new Guid("eb81d422-4688-48be-beac-d44d7a01d721"),
                            Language = "uk",
                            Name = "медицина",
                            SkillId = new Guid("f0bc6d05-27c0-4e7d-afb3-d8c2182601e2")
                        },
                        new
                        {
                            Id = new Guid("ef493e34-ac70-4180-9335-02b3b34a2043"),
                            Language = "pl",
                            Name = "medycyna",
                            SkillId = new Guid("f0bc6d05-27c0-4e7d-afb3-d8c2182601e2")
                        },
                        new
                        {
                            Id = new Guid("a825354f-e8ab-4b16-9e6f-8a5c3dd9fe4c"),
                            Language = "en",
                            Name = "cooking",
                            SkillId = new Guid("60699999-0c05-436d-a5ad-bd420345c9a1")
                        },
                        new
                        {
                            Id = new Guid("59cc65ed-9400-4a7d-9ee5-a79d9173da92"),
                            Language = "uk",
                            Name = "кулінарія",
                            SkillId = new Guid("60699999-0c05-436d-a5ad-bd420345c9a1")
                        },
                        new
                        {
                            Id = new Guid("91850423-b4ac-4dd9-aec5-6c8e8ae9604f"),
                            Language = "pl",
                            Name = "gotowanie",
                            SkillId = new Guid("60699999-0c05-436d-a5ad-bd420345c9a1")
                        },
                        new
                        {
                            Id = new Guid("54643301-40b6-43c0-b014-266f8cf8d0c4"),
                            Language = "en",
                            Name = "building",
                            SkillId = new Guid("57653ca6-d7ec-40c0-b2da-42b2b9c1bc0b")
                        },
                        new
                        {
                            Id = new Guid("3de75490-214b-4b7e-9e65-ab38abfca421"),
                            Language = "uk",
                            Name = "будівництво",
                            SkillId = new Guid("57653ca6-d7ec-40c0-b2da-42b2b9c1bc0b")
                        },
                        new
                        {
                            Id = new Guid("8839725f-936f-4d63-b67d-8371a5fe3b06"),
                            Language = "pl",
                            Name = "budowa",
                            SkillId = new Guid("57653ca6-d7ec-40c0-b2da-42b2b9c1bc0b")
                        },
                        new
                        {
                            Id = new Guid("a9bc99ac-df82-4d4e-a84e-d54418160e7d"),
                            Language = "en",
                            Name = "psychology",
                            SkillId = new Guid("d03a13ef-a7ca-4b8b-a5ba-88e46db20ba9")
                        },
                        new
                        {
                            Id = new Guid("5f753bdb-feed-49ab-a2a7-49142d27c6ff"),
                            Language = "uk",
                            Name = "психологія",
                            SkillId = new Guid("d03a13ef-a7ca-4b8b-a5ba-88e46db20ba9")
                        },
                        new
                        {
                            Id = new Guid("4d05f4d8-b2a2-47f3-a415-1d287630ce01"),
                            Language = "pl",
                            Name = "psychologia",
                            SkillId = new Guid("d03a13ef-a7ca-4b8b-a5ba-88e46db20ba9")
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3d535460-3ce6-4c30-9840-e9a3c4666759"),
                            CityId = new Guid("268d4e59-d3a4-4853-b7fc-2d8310be527d"),
                            DateOfBirth = new DateTime(2024, 1, 14, 19, 6, 55, 302, DateTimeKind.Local).AddTicks(5562),
                            EmailConfirmed = false,
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "our1admin@gmail.com",
                            Password = "9qnurdZnxkigjcD0t+maG+TtODQacZLWeeeeylwyRFY=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FriendlyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Xml")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataProtectionKeys");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.Category", "Category")
                        .WithMany("Applications")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Applications")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("City");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationDocument", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("ApplicationDocuments")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationPicture", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("ApplicationPictures")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DAL.Entities.ApplicationSkill", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("ApplicationSkills")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("ApplicationSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DAL.Entities.CategoryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Category", "Category")
                        .WithMany("CategoryTranslations")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.Donate", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Donates")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Application");
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.HasOne("DAL.Entities.Volunteer", "Volunteer")
                        .WithMany("Messages")
                        .HasForeignKey("VolunteerUserId", "VolunteerApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("DAL.Entities.Notification", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Notifications")
                        .HasForeignKey("ApplictionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Entities.User", "UserRecipient")
                        .WithMany("ReceivedNotifications")
                        .HasForeignKey("UserRecipientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "UserSender")
                        .WithMany("SentNotifications")
                        .HasForeignKey("UserSenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("UserRecipient");

                    b.Navigation("UserSender");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("SkillTranslations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Volunteers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Volunteers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Navigation("ApplicationDocuments");

                    b.Navigation("ApplicationPictures");

                    b.Navigation("ApplicationSkills");

                    b.Navigation("Donates");

                    b.Navigation("Notifications");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Category", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CategoryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("ApplicationSkills");

                    b.Navigation("SkillTranslations");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("ReceivedNotifications");

                    b.Navigation("SentNotifications");

                    b.Navigation("UserSkills");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
